diff --git a/src/features/social/SocialScreen.tsx b/src/features/social/SocialScreen.tsx
index 9999999..aaaaaaa 100644
--- a/src/features/social/SocialScreen.tsx
+++ b/src/features/social/SocialScreen.tsx
@@ -1,21 +1,38 @@
 import React from 'react';
-import { View, Text, ScrollView, StyleSheet, Pressable } from 'react-native';
+import { View, Text, ScrollView, StyleSheet, Pressable } from 'react-native';
 import { useStore } from '../../state/rootStore';
 import { ShareComposer } from './ShareComposer';
 import { Post } from '../../state/slices/socialSlice';
+import { PromptCarousel } from './components/PromptCarousel';
 
 export const SocialScreen = () => {
   const feedView = useStore(s=>s.feedView);
   const setFeedView = useStore(s=>s.setFeedView);
   const circle = useStore(s=>s.circleFeed);
   const follow = useStore(s=>s.followFeed);
   const posts: Post[] = feedView==='circle'?circle:follow;
   const openShare = useStore(s=>s.openShare);
 
   return (
-    <>
-      <ScrollView style={{ flex:1, backgroundColor:'#000' }} contentContainerStyle={{ padding:16, paddingBottom:120 }}>
+    <>
+      {/* Sticky header with tabs + composer */}
+      <View style={styles.stickyHeader}>
+        <View style={[styles.switch,{paddingHorizontal:16}]}>
+          <Pressable onPress={()=>setFeedView('circle')} style={[styles.tab, feedView==='circle'&&styles.active]}><Text style={styles.tabText}>Circle</Text></Pressable>
+          <Pressable onPress={()=>setFeedView('follow')} style={[styles.tab, feedView==='follow'&&styles.active]}><Text style={styles.tabText}>Follow</Text></Pressable>
+        </View>
+        <View style={{paddingHorizontal:16}}>
+          <PromptCarousel
+            onSeed={(seed)=>openShare({ type:'status', visibility:feedView, promptSeed:seed })}
+            onStatus={()=>openShare({ type:'status', visibility:feedView })}
+            onPhoto={()=>openShare({ type:'photo', visibility:feedView })}
+            onAudio={()=>openShare({ type:'audio', visibility:feedView })}
+          />
+        </View>
+      </View>
+
+      <ScrollView style={{ flex:1, backgroundColor:'#000' }} contentContainerStyle={{ padding:16, paddingTop:170, paddingBottom:120 }}>
-        {/* Tabs */}
-        <View style={styles.switch}>
-          <Pressable onPress={()=>setFeedView('circle')} style={[styles.tab, feedView==='circle'&&styles.active]}><Text style={styles.tabText}>Circle</Text></Pressable>
-          <Pressable onPress={()=>setFeedView('follow')} style={[styles.tab, feedView==='follow'&&styles.active]}><Text style={styles.tabText}>Follow</Text></Pressable>
-        </View>
-
-        {/* Always-on prompt with suggestions */}
-        <View style={styles.promptCard}>
-          <Text style={styles.promptTitle}>Share something</Text>
-          <View style={styles.promptChips}>
-            {['What's your biggest insight today?','The hardest thing about today was‚Ä¶','A small win I'm proud of‚Ä¶'].map(seed => (
-              <Pressable key={seed} onPress={()=>openShare({ type:'status', visibility:feedView, promptSeed:seed })} style={styles.chip}>
-                <Text style={styles.chipText}>{seed}</Text>
-              </Pressable>
-            ))}
-          </View>
-          <View style={styles.quickRow}>
-            <Pressable onPress={()=>openShare({ type:'status', visibility:feedView })} style={styles.quickBtn}><Text style={styles.quickText}>‚úçÔ∏è Status</Text></Pressable>
-            <Pressable onPress={()=>openShare({ type:'photo', visibility:feedView })} style={styles.quickBtn}><Text style={styles.quickText}>üñºÔ∏è Photo</Text></Pressable>
-            <Pressable onPress={()=>openShare({ type:'audio', visibility:feedView })} style={styles.quickBtn}><Text style={styles.quickText}>üéôÔ∏è Audio</Text></Pressable>
-          </View>
-        </View>
-
         {/* Feed */}
         {posts.map(p => <PostRow key={p.id} post={p} which={feedView} />)}
       </ScrollView>
       <ShareComposer />
     </>
   );
 };
 const PostRow = require('./PostCard').PostCard;
 
 const styles=StyleSheet.create({
-  switch:{ flexDirection:'row', gap:8, marginBottom:16 },
+  stickyHeader:{ position:'absolute', top:0, left:0, right:0, backgroundColor:'#000', paddingTop:12, zIndex:5 },
+  switch:{ flexDirection:'row', gap:8, marginBottom:12 },
   tab:{ flex:1, borderWidth:1, borderColor:'rgba(255,255,255,0.08)', borderRadius:16, paddingVertical:12, alignItems:'center' },
   active:{ backgroundColor:'rgba(255,255,255,0.06)' },
-  tabText:{ color:'#FFFFFF', fontWeight:'700' },
-  promptCard:{ borderWidth:1, borderColor:'rgba(255,255,255,0.1)', backgroundColor:'rgba(255,255,255,0.04)', borderRadius:16, padding:14, marginBottom:16 },
-  promptTitle:{ color:'#FFF', fontWeight:'800', marginBottom:8 },
-  promptChips:{ flexDirection:'row', flexWrap:'wrap', gap:8, marginBottom:10 },
-  chip:{ borderWidth:1, borderColor:'rgba(255,255,255,0.12)', backgroundColor:'rgba(255,255,255,0.06)', borderRadius:999, paddingVertical:8, paddingHorizontal:12 },
-  chipText:{ color:'#ECEDEF' },
-  quickRow:{ flexDirection:'row', gap:8 },
-  quickBtn:{ flex:1, alignItems:'center', paddingVertical:10, borderRadius:12, borderWidth:1, borderColor:'rgba(255,255,255,0.12)', backgroundColor:'rgba(255,255,255,0.06)' },
-  quickText:{ color:'#FFF', fontWeight:'700' },
+  tabText:{ color:'#FFFFFF', fontWeight:'700' },
 });
diff --git a/src/features/social/components/PromptCarousel.tsx b/src/features/social/components/PromptCarousel.tsx
new file mode 100644
index 0000000..bbbbbbb
--- /dev/null
+++ b/src/features/social/components/PromptCarousel.tsx
@@ -0,0 +1,120 @@
+import React from 'react';
+import { View, Text, Pressable, StyleSheet, ScrollView } from 'react-native';
+
+const SEEDS = [
+  "What's your biggest insight today?",
+  "The hardest thing about today was‚Ä¶",
+  "A small win I'm proud of‚Ä¶"
+];
+
+type Props = {
+  onSeed: (s:string)=>void;
+  onStatus: ()=>void;
+  onPhoto: ()=>void;
+  onAudio: ()=>void;
+};
+
+export const PromptCarousel: React.FC<Props> = ({ onSeed, onStatus, onPhoto, onAudio }) => {
+  const scrollRef = React.useRef<ScrollView|null>(null);
+  const [index, setIndex] = React.useState(0);
+
+  React.useEffect(()=> {
+    const id = setInterval(()=> {
+      const next = (index+1) % SEEDS.length;
+      setIndex(next);
+      scrollRef.current?.scrollTo({ x: next * 280, animated: true });
+    }, 6000);
+    return ()=> clearInterval(id);
+  }, [index]);
+
+  return (
+    <View style={styles.card}>
+      <Text style={styles.title}>Share something</Text>
+
+      <ScrollView
+        horizontal
+        ref={scrollRef}
+        showsHorizontalScrollIndicator={false}
+        contentContainerStyle={{gap:8}}
+        snapToInterval={280}
+        decelerationRate="fast"
+      >
+        {SEEDS.map(seed => (
+          <Pressable key={seed} onPress={()=>onSeed(seed)} style={styles.chip}>
+            <Text style={styles.chipText}>{seed}</Text>
+          </Pressable>
+        ))}
+      </ScrollView>
+
+      <View style={styles.quickRow}>
+        <Pressable onPress={onStatus} style={styles.quickBtn}><Text style={styles.quickText}>‚úçÔ∏è Status</Text></Pressable>
+        <Pressable onPress={onPhoto} style={styles.quickBtn}><Text style={styles.quickText}>üñºÔ∏è Photo</Text></Pressable>
+        <Pressable onPress={onAudio} style={styles.quickBtn}><Text style={styles.quickText}>üéôÔ∏è Audio</Text></Pressable>
+      </View>
+    </View>
+  );
+};
+
+const styles = StyleSheet.create({
+  card:{ borderWidth:1, borderColor:'rgba(255,255,255,0.1)', backgroundColor:'rgba(255,255,255,0.04)', borderRadius:16, padding:14, marginBottom:12 },
+  title:{ color:'#FFF', fontWeight:'800', marginBottom:8 },
+  chip:{ width:280, borderWidth:1, borderColor:'rgba(255,255,255,0.12)', backgroundColor:'rgba(255,255,255,0.06)', borderRadius:999, paddingVertical:10, paddingHorizontal:12 },
+  chipText:{ color:'#ECEDEF' },
+  quickRow:{ flexDirection:'row', gap:8, marginTop:10 },
+  quickBtn:{ flex:1, alignItems:'center', paddingVertical:10, borderRadius:12, borderWidth:1, borderColor:'rgba(255,255,255,0.12)', backgroundColor:'rgba(255,255,255,0.06)' },
+  quickText:{ color:'#FFF', fontWeight:'700' },
+});
diff --git a/src/features/social/PostCard.tsx b/src/features/social/PostCard.tsx
index 7777777..ccccccc 100644
--- a/src/features/social/PostCard.tsx
+++ b/src/features/social/PostCard.tsx
@@ -1,12 +1,15 @@
 import React from 'react';
-import { View, Text, StyleSheet, Pressable, Image } from 'react-native';
+import { View, Text, StyleSheet, Pressable, Image, Animated } from 'react-native';
 import { GlassSurface } from '../../ui/GlassSurface';
 import { useStore } from '../../state/rootStore';
 import { Post } from '../../state/slices/socialSlice';
 
 export const PostCard: React.FC<{ post: Post; which:'circle'|'follow'}> = ({ post, which })=>{
   const react = useStore(s=>s.react);
+  const scale = React.useRef(new Animated.Value(1)).current;
+  const pulse = () => Animated.sequence([Animated.timing(scale,{toValue:0.96,duration:80,useNativeDriver:true}), Animated.spring(scale,{toValue:1,useNativeDriver:true})]).start();
   // style by type
-  const borderTint = post.type==='checkin' ? (post.goalColor || 'rgba(16,185,129,0.4)') 
+  const borderTint = post.type==='checkin' ? (post.goalColor || 'rgba(16,185,129,0.5)') 
                     : post.type==='photo' ? 'rgba(255,255,255,0.35)'
                     : post.type==='audio' ? 'rgba(160,170,255,0.45)'
                     : 'rgba(255,255,255,0.12)';
@@ -14,7 +14,7 @@ export const PostCard: React.FC<{ post: Post; which:'circle'|'follow'}> = ({ post, which })=>{
-    <GlassSurface style={[styles.card, { borderColor: borderTint }]}>
+    <GlassSurface style={[styles.card, { borderColor: borderTint }]}>
       <View style={styles.header}>
         <View style={styles.avatar}>
           <Text style={{fontSize:16}}>{post.avatar ?? 'üë§'}</Text>
@@ -34,7 +34,7 @@ export const PostCard: React.FC<{ post: Post; which:'circle'|'follow'}> = ({ post, which })=>{
       {!!post.content && <Text style={styles.content}>{post.content}</Text>}
       {!!post.photoUri && <Image source={{uri: post.photoUri}} style={styles.photo} />}
-      {post.type==='audio' && post.audioUri && (
+      {post.type==='audio' && post.audioUri && (
         <View style={styles.audioRow}>
           <Text style={styles.audioBadge}>üéôÔ∏è Voice note</Text>
         </View>
@@ -42,12 +42,16 @@ export const PostCard: React.FC<{ post: Post; which:'circle'|'follow'}> = ({ post, which })=>{
 
-      <View style={styles.row}>
-        {['üëè','üí™','üî•'].map(e=>(
-          <Pressable key={e} onPress={()=>react(post.id,e,which)} style={styles.pill}>
+      <Animated.View style={[styles.row,{transform:[{scale}]}]}>
+        {['üëè','üí™','üî•'].map(e=>(
+          <Pressable key={e} onPress={()=>{ pulse(); react(post.id,e,which); }} style={styles.pill}>
             <Text style={styles.pillText}>{e} {(post.reactions[e]||0)}</Text>
           </Pressable>
         ))}
         <Pressable style={[styles.pill, {marginLeft:'auto'}]}>
           <Text style={styles.pillText}>üí¨ Comment</Text>
         </Pressable>
-      </View>
+      </Animated.View>
     </GlassSurface>
   );
 };
@@ -55,14 +62,14 @@ const styles=StyleSheet.create({
-  card:{ padding:16, marginBottom:12, borderWidth:1 },
+  card:{ padding:16, marginBottom:12, borderWidth:1, borderRadius:16 },
   header:{ flexDirection:'row', alignItems:'center', marginBottom:8, gap:10 },
-  avatar:{ width:36, height:36, borderRadius:18, backgroundColor:'rgba(255,255,255,0.08)', alignItems:'center', justifyContent:'center' },
+  avatar:{ width:36, height:36, borderRadius:18, backgroundColor:'rgba(255,255,255,0.08)', alignItems:'center', justifyContent:'center', borderWidth:1, borderColor:'rgba(255,255,255,0.14)' },
   user:{ color:'#FFF', fontWeight:'700' },
   when:{ color:'rgba(255,255,255,0.6)', fontSize:12 },
   goalChip:{ borderWidth:1, borderRadius:999, paddingVertical:6, paddingHorizontal:10 },
   goalChipText:{ fontWeight:'700' },
   block:{ borderWidth:1, borderColor:'rgba(255,255,255,0.12)', backgroundColor:'rgba(255,255,255,0.04)', borderRadius:12, padding:10, marginBottom:8 },
   checkTitle:{ color:'#FFF', fontWeight:'700' },
   meta:{ color:'rgba(255,255,255,0.7)', marginTop:4 },
-  content:{ color:'#ECEDEF', marginTop:6, marginBottom:10 },
+  content:{ color:'#ECEDEF', marginTop:6, marginBottom:8, lineHeight:20 },
   photo:{ width:'100%', height:220, borderRadius:12, marginTop:4 },
   audioRow:{ marginTop:6, marginBottom:6 },
   audioBadge:{ color:'#DADBE0' },
   row:{ flexDirection:'row', gap:8 },
-  pill:{ borderColor:'rgba(255,255,255,0.08)', borderWidth:1, paddingVertical:6, paddingHorizontal:12, borderRadius:999 },
+  pill:{ borderColor:'rgba(255,255,255,0.12)', borderWidth:1, paddingVertical:8, paddingHorizontal:14, borderRadius:999, backgroundColor:'rgba(255,255,255,0.05)' },
   pillText:{ color:'#FFFFFF' }
 });